unit Unit1;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.ExtCtrls;

type
  TForm1 = class(TForm)
    Panel1: TPanel;
    Panel2: TPanel;
    Edit1: TEdit;
    Label1: TLabel;
    Button1: TButton;
    Edit2: TEdit;
    Label2: TLabel;
    procedure Button1Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
    function PKV_GetKeyByte(const Seed: Int64; a, b, c: Byte): Byte;
  end;

var
  Form1: TForm1;

implementation

{$R *.dfm}

function PKV_MakeKey(const Seed: Int64; KeyBytes: array of Byte): String;
  stdcall; external 'Project1.dll';
function PKV_GetChecksum(const s: String): String; stdcall;
  external 'Project1.dll';

function TForm1.PKV_GetKeyByte(const Seed: Int64; a, b, c: Byte): Byte;
begin
  a := a mod 25;
  b := b mod 3;
  if a mod 2 = 0 then
    result := ((Seed shr a) and $000000FF) xor ((Seed shr b) or c)
  else
    result := ((Seed shr a) and $000000FF) xor ((Seed shr b) and c);
end;

procedure TForm1.Button1Click(Sender: TObject);
var
  KeyBytes: array [0 .. 3] of Byte;
begin
  KeyBytes[0] := PKV_GetKeyByte(StrToInt(Edit1.Text), 24, 3, 200);
  KeyBytes[1] := PKV_GetKeyByte(StrToInt(Edit1.Text), 10, 0, 56);
  KeyBytes[2] := PKV_GetKeyByte(StrToInt(Edit1.Text), 1, 2, 91);
  KeyBytes[3] := PKV_GetKeyByte(StrToInt(Edit1.Text), 7, 1, 100);
  Edit2.Text := PKV_MakeKey(StrToInt64(Edit1.Text), KeyBytes);

end;

end.
